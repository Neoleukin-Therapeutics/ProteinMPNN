# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- task: TwineAuthenticate@1
  displayName: 'Twine Authenticate'
  inputs:
    artifactFeed: '$(ARTIFACT_FEED)'

- task: Bash@3
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/v'))
  inputs:
    targetType: 'inline'
    script: |
      cat $(PYPIRC_PATH)
      docker run -v $(pwd):$(pwd) -v $(PYPIRC_PATH):$(PYPIRC_PATH) --workdir $(pwd) $(CICD_BASE_LOCATION)/vanilla_proteinmpnn:$(Build.SourceBranchName)-$(Build.BuildId) bash -c 'python -m twine upload -r $(ARTIFACT_FEED) --config-file $(PYPIRC_PATH) /var/$(cat /var/wheel_version)'


